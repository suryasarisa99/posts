[{"/home/surya/ws/node/posts/client/src/index.js":"1","/home/surya/ws/node/posts/client/src/App.js":"2","/home/surya/ws/node/posts/client/src/context/authContext.js":"3","/home/surya/ws/node/posts/client/src/pages/Discover.js":"4","/home/surya/ws/node/posts/client/src/pages/Signout.js":"5","/home/surya/ws/node/posts/client/src/pages/Postslist.js":"6","/home/surya/ws/node/posts/client/src/pages/Profile.js":"7","/home/surya/ws/node/posts/client/src/pages/Signin.js":"8","/home/surya/ws/node/posts/client/src/pages/Signup.js":"9","/home/surya/ws/node/posts/client/src/components/Navbar.js":"10","/home/surya/ws/node/posts/client/src/components/Sharedpost.js":"11","/home/surya/ws/node/posts/client/src/components/Create.js":"12","/home/surya/ws/node/posts/client/src/components/Post.js":"13","/home/surya/ws/node/posts/client/src/components/Comment.js":"14"},{"size":391,"mtime":1681635431352,"results":"15","hashOfConfig":"16"},{"size":1309,"mtime":1681743974034,"results":"17","hashOfConfig":"16"},{"size":755,"mtime":1682148065013,"results":"18","hashOfConfig":"16"},{"size":1645,"mtime":1682148219564,"results":"19","hashOfConfig":"16"},{"size":614,"mtime":1682146460671,"results":"20","hashOfConfig":"16"},{"size":3266,"mtime":1682146445687,"results":"21","hashOfConfig":"16"},{"size":4659,"mtime":1683953402644,"results":"22","hashOfConfig":"16"},{"size":2694,"mtime":1682146627626,"results":"23","hashOfConfig":"16"},{"size":3489,"mtime":1682146465531,"results":"24","hashOfConfig":"16"},{"size":1151,"mtime":1681672320111,"results":"25","hashOfConfig":"16"},{"size":6844,"mtime":1682146424135,"results":"26","hashOfConfig":"16"},{"size":1049,"mtime":1682146406491,"results":"27","hashOfConfig":"16"},{"size":6781,"mtime":1683954476480,"results":"28","hashOfConfig":"16"},{"size":2096,"mtime":1683911173327,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1ke5xqa",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"33"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"33"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"33"},"/home/surya/ws/node/posts/client/src/index.js",[],[],[],"/home/surya/ws/node/posts/client/src/App.js",["81","82"],[],"import { Routes, Route } from \"react-router-dom\";\n\nimport Signup from \"./pages/Signup\";\nimport Signin from \"./pages/Signin\";\nimport Signout from \"./pages/Signout\";\nimport Postlist from \"./pages/Postslist\";\nimport Profile from \"./pages/Profile\";\nimport Discover from \"./pages/Discover\";\nimport Navbar from \"./components/Navbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport authContext from \"./context/authContext\";\nimport { useContext } from \"react\";\nimport Sharedpost from \"./components/Sharedpost\";\n// import { useHistory } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { unstable_HistoryRouter } from \"react-router-dom\";\nexport default function App() {\n  let navigate = useNavigate();\n  let { logined } = useContext(authContext);\n  return (\n    <>\n      <Navbar />\n      <Routes>\n        <Route path={\"/signup\"} Component={Signup} />\n        <Route path={\"/signin\"} Component={Signin} />\n        <Route path={\"/discover\"} Component={Discover} />\n        <Route path={\"/shared-post/:postId\"} Component={Sharedpost} />\n        {logined && (\n          <>\n            <Route path={\"/signout\"} Component={Signout} />\n            <Route path={\"/posts\"} Component={Postlist} />\n            <Route path={\"/profile\"} Component={Profile} />\n          </>\n        )}\n      </Routes>\n    </>\n  );\n}\n","/home/surya/ws/node/posts/client/src/context/authContext.js",[],[],"/home/surya/ws/node/posts/client/src/pages/Discover.js",["83","84"],[],"import axios from \"axios\";\nimport { useState, useEffect, useContext, useReducer } from \"react\";\nimport immer from \"immer\";\nimport Post from \"../components/Post\";\nimport authContext from \"../context/authContext\";\n// let SERVER_URI = \"http://192.168.0.169:3000\";\nlet SERVER_URI = process.env.REACT_APP_SERVER_URI;\nexport default function Discover() {\n  let { logined } = useContext(authContext);\n\n  function reducer(state, action) {\n    if (action.type === \"updateImg\") {\n      state.posts[action.index].imageUrl = action.payload;\n    } else if (action.type === \"setPosts\") {\n      state.posts = action.payload;\n    }\n  }\n\n  const [state, dispatch] = useReducer(immer(reducer), {\n    posts: [],\n  });\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  function getPosts() {\n    axios\n      .get(`${SERVER_URI}/p/all-posts`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        dispatch({\n          type: \"setPosts\",\n          payload: res.data.posts,\n        });\n        console.log(res.data);\n        res.data.posts.forEach((post, ind) => getPostImg(post.post, ind));\n      });\n  }\n\n  function getPostImg(post, ind) {\n    const id = post.split(\"/\").pop();\n    axios\n      .get(`${SERVER_URI}/p/post-img/${id}`, {\n        withCredentials: true,\n        responseType: \"blob\",\n      })\n      .then((res) => {\n        const url = URL.createObjectURL(res.data);\n        dispatch({\n          type: \"updateImg\",\n          payload: url,\n          index: ind,\n        });\n      });\n  }\n\n  return state.posts?.map((post, ind) => {\n    return (\n      <Post post={post} logined={logined} getPosts={getPosts} key={post.id} />\n    );\n  });\n}\n","/home/surya/ws/node/posts/client/src/pages/Signout.js",[],[],"/home/surya/ws/node/posts/client/src/pages/Postslist.js",["85","86","87","88"],[],"import axios from \"axios\";\nimport { useState, useEffect, useReducer, useContext } from \"react\";\nimport immer from \"immer\";\nimport Post from \"../components/Post\";\nimport ReactDOM from \"react-dom\";\nimport Create from \"../components/Create\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\n// let SERVER_URI = \"http://192.168.0.169:3000\";\nimport authContext from \"../context/authContext\";\nlet SERVER_URI = process.env.REACT_APP_SERVER_URI;\nfunction Postlist() {\n  function reducer(state, action) {\n    if (action.type === \"updateImg\") {\n      state.posts[action.index].imageUrl = action.payload;\n    } else if (action.type === \"setPosts\") {\n      state.posts = action.payload;\n    } else if (action.type === \"setLikes\") {\n      state.posts[action.index].likesCount = action.likesCount;\n      state.posts[action.index].liked = action.liked;\n    }\n  }\n\n  const [showCreate, setShowCreate] = useState(false);\n  const [state, dispatch] = useReducer(immer(reducer), {\n    posts: [],\n  });\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  function getPosts() {\n    axios\n      .get(`${SERVER_URI}/p/post`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        dispatch({\n          type: \"setPosts\",\n          payload: res.data.posts,\n        });\n        console.log(res.data);\n        res.data.posts.forEach((post, ind) => getPostImg(post.post, ind));\n      });\n  }\n\n  function getPostImg(post, ind) {\n    axios\n      .get(`${SERVER_URI}/p/post-img/${post}`, {\n        withCredentials: true,\n        responseType: \"blob\",\n      })\n      .then((res) => {\n        const url = URL.createObjectURL(res.data);\n        dispatch({\n          type: \"updateImg\",\n          payload: url,\n          index: ind,\n        });\n      });\n  }\n\n  let posts = state.posts?.map((post, ind) => {\n    return (\n      <Post\n        post={{ ...post, editable: true }}\n        key={post.id}\n        logined={true}\n        editable={true}\n      />\n    );\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let form = e.target;\n    let data = {\n      post: form.post.files[0],\n      caption: form.caption.value,\n    };\n    setShowCreate(false);\n    console.log(form.post.files[0]);\n    axios\n      .post(`${SERVER_URI}/p/post`, data, {\n        withCredentials: true,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((res) => {\n        getPosts();\n      });\n  }\n\n  useEffect(() => {\n    if (showCreate) {\n      window.addEventListener(\"scroll\", () => {\n        setShowCreate(false);\n      });\n    }\n  }, [showCreate]);\n\n  return (\n    <>\n      {posts}\n      {!showCreate &&\n        ReactDOM.createPortal(\n          <div\n            className=\"\"\n            style={{ position: \"fixed\", bottom: \"20px\", right: \"40px\" }}\n          >\n            <button onClick={() => setShowCreate(true)}>\n              <div className=\"rounded-full border-2 p-4 bg-inherit\">\n                <FaPlus style={{ width: \"25px\", height: \"25px\" }} />\n              </div>\n            </button>\n          </div>,\n          document.querySelector(\".overlay\")\n        )}\n      {showCreate && <Create handleSubmit={handleSubmit} />}\n      <div className=\"mt-18\"></div>\n    </>\n  );\n}\n\nexport default Postlist;\n","/home/surya/ws/node/posts/client/src/pages/Profile.js",["89","90","91"],[],"import { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useState, useReducer, useEffect } from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport immer from \"immer\";\nimport { useNavigate } from \"react-router-dom\";\n// let SERVER_URI = \"http://192.168.0.169:3000\";\nlet SERVER_URI = process.env.REACT_APP_SERVER_URI;\n\nexport default function Profile() {\n  const [profile, setProfile] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [fnameValue, setFnameValue] = useState(\"\");\n  const [lnameValue, setLnameValue] = useState(\"\");\n\n  let navigate = useNavigate();\n  useEffect(() => {\n    axios\n      .get(`${SERVER_URI}/auth/profile`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res.data);\n        setProfile(res.data);\n        setFnameValue(res.data.fname);\n        setLnameValue(res.data.lname);\n        setEmailValue(res.data.email);\n      });\n  }, []);\n\n  function editFnameHandle(e) {\n    setFnameValue(e.target.value);\n  }\n  function editLnameHandle(e) {\n    setLnameValue(e.target.value);\n  }\n  function editEmailHandle(e) {\n    setEmailValue(e.target.value);\n  }\n\n  function submitEditHandle(e) {\n    e.preventDefault();\n    let data = {\n      fname: fnameValue,\n      lname: lnameValue,\n      email: emailValue,\n    };\n    profile.fname = fnameValue;\n    profile.lname = lnameValue;\n    profile.email = emailValue;\n    setEditMode(false);\n    axios\n      .patch(`${SERVER_URI}/auth/profile-edit`, data, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res.data);\n      });\n  }\n  return (\n    <form action=\"\">\n      <div className=\"max-w-xs border mx-auto  mt-16 bg-white  rounded-md p-6 shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)]\">\n        <div\n          className=\"flex items-center justify-between\"\n          onClick={() => setEditMode(!editMode)}\n        >\n          <h1 className=\"text-lg font-bold mb-4\">Profile</h1>\n          <FaEdit />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 font-bold mb-2\" htmlFor=\"fname\">\n            First Name:\n          </label>\n          {!editMode && <p className=\"text-gray-700\">{profile.fname}</p>}\n          {editMode && (\n            <input\n              className=\"bg-inherit border rounded pl-2 focus:outline-none \"\n              style={{ height: \"40px\" }}\n              name=\"fname\"\n              value={fnameValue}\n              onChange={editFnameHandle}\n            />\n          )}\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 font-bold mb-2\" htmlFor=\"lname\">\n            Last Name:\n          </label>\n          {!editMode && <p className=\"text-gray-700\">{profile.lname}</p>}\n          {editMode && (\n            <input\n              className=\"bg-inherit border rounded pl-2 focus:outline-none \"\n              style={{ height: \"40px\" }}\n              name=\"lname\"\n              value={lnameValue}\n              onChange={editLnameHandle}\n            />\n          )}\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 font-bold mb-2\" htmlFor=\"email\">\n            Email:\n          </label>\n          {!editMode && <p className=\"text-gray-700\">{profile.email}</p>}\n          {editMode && (\n            <input\n              className=\"bg-inherit border rounded pl-2 focus:outline-none  \"\n              style={{ height: \"40px\" }}\n              name=\"email\"\n              value={emailValue}\n              onChange={editEmailHandle}\n            />\n          )}\n        </div>\n        {!editMode && (\n          <>\n            <div\n              style={{ display: \"inline-block\" }}\n              className=\"bg-blue-500 mr-5 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            >\n              <Link to=\"/\">Home</Link>\n            </div>\n            <div\n              style={{ display: \"inline-block\" }}\n              className=\"bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            >\n              <Link to=\"/signout\">Logout</Link>\n            </div>\n          </>\n        )}\n        {editMode && (\n          <div\n            style={{ display: \"inline-block\" }}\n            className=\"bg-blue-500 mr-5 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n          >\n            <button onClick={submitEditHandle}>Submit</button>\n          </div>\n        )}\n      </div>\n    </form>\n  );\n}\n","/home/surya/ws/node/posts/client/src/pages/Signin.js",[],[],"/home/surya/ws/node/posts/client/src/pages/Signup.js",[],[],"/home/surya/ws/node/posts/client/src/components/Navbar.js",["92"],[],"import { Link, useNavigate } from \"react-router-dom\";\nimport { useContext, useEffect } from \"react\";\nimport authContext from \"../context/authContext\";\n\nexport default function Navbar() {\n  let { logined } = useContext(authContext);\n\n  let navigate = useNavigate();\n  return (\n    <>\n      <nav className=\"flex p-5 bg-blue-500  mb-10 justify-between items-center\">\n        <h1 className=\"ml-5 text-2xl font-medium\" onClick={() => navigate(\"/\")}>\n          Surya\n        </h1>\n        <ul className=\"flex items-center gap-4 text-sm mr-5\">\n          {!logined && (\n            <>\n              <li>\n                <Link to={\"Signup\"}>Sign up</Link>\n              </li>\n              <li>\n                <Link to={\"signin\"}>Sign in</Link>\n              </li>\n            </>\n          )}\n          <li>\n            <Link to={\"discover\"}>Discover</Link>\n          </li>\n          {logined && (\n            <>\n              <li>\n                <Link to=\"posts\">Posts</Link>\n              </li>\n              <li>\n                <Link to=\"profile\">Profile</Link>\n              </li>\n            </>\n          )}\n        </ul>\n      </nav>\n    </>\n  );\n}\n","/home/surya/ws/node/posts/client/src/components/Sharedpost.js",["93","94","95"],[],"import { useState, useContext, useEffect } from \"react\";\nimport { GoHeart } from \"react-icons/go\";\nimport { FaTrashAlt, FaEdit } from \"react-icons/fa\";\nimport { FaLocationArrow } from \"react-icons/fa\";\nimport { FaShare } from \"react-icons/fa\";\nimport Loading from \"./loading.jpg\";\nimport axios from \"axios\";\nimport Comment from \"./Comment\";\nimport { useParams } from \"react-router-dom\";\nimport authContext from \"../context/authContext\";\n\n// let SERVER_URI = \"http://192.168.0.169:3000\";\nlet SERVER_URI = process.env.REACT_APP_SERVER_URI;\n\nexport default function Sharedpost(\n  {\n    /* post, logined, getPosts */\n  }\n) {\n  let [post, setPost] = useState({});\n  const [likeStatus, setLikeStatus] = useState({\n    liked: post.liked || false,\n    likesCount: post.likesCount || 0,\n  });\n  useEffect(() => {\n    fetchPost(postId);\n    fetchLikeDetails();\n  }, []);\n  let { logined } = useContext(authContext);\n  const [showComments, setShowComments] = useState(false);\n  const [postEditMode, setPostEditMode] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [captionEditText, setCaptionEditText] = useState(post.caption);\n  let [postDeleted, setPostDeleted] = useState(false);\n  let { postId } = useParams();\n  function fetchPost(postId) {\n    axios\n      .get(`${SERVER_URI}/p/post-shared/${postId}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        setPost(res.data.postToShare);\n        setCaptionEditText(res.data.postToShare.caption);\n        getPostImg(res.data.postToShare);\n      });\n  }\n  function getPostImg(postToShare) {\n    axios\n      .get(`${SERVER_URI}/p/post-img/${postToShare.post}`, {\n        withCredentials: true,\n        responseType: \"blob\",\n      })\n      .then((res) => {\n        const url = URL.createObjectURL(res.data);\n        setPost({ ...postToShare, imageUrl: url });\n      });\n  }\n  const toggleLike = async () => {\n    // logic to toggle like\n    setLikeStatus({\n      liked: !likeStatus.liked,\n      likesCount: likeStatus.likesCount + (likeStatus.liked ? -1 : 1),\n    });\n    updateLikeDetails();\n  };\n  function fetchLikeDetails() {\n    axios\n      .get(`${SERVER_URI}/l/like-status/${post.id}/post`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        setLikeStatus({\n          liked: res.data.liked,\n          likesCount: res.data.likesCount,\n        });\n      });\n  }\n  function updateLikeDetails() {\n    axios\n      .post(\n        `${SERVER_URI}/l/liked/${post.id}/post`,\n        {},\n        {\n          withCredentials: true,\n        }\n      )\n      .then((res) => {\n        console.log(res.data);\n      });\n  }\n\n  function fetchComments(id) {\n    axios.get(`${SERVER_URI}/c/comments/${id}`, { postId: id }).then((res) => {\n      console.log(res.data);\n      setComments(res.data);\n    });\n  }\n\n  function handleComments() {\n    if (!showComments) {\n      fetchComments(post.id);\n      setShowComments(true);\n    } else setShowComments(false);\n  }\n\n  function deletePost() {\n    let url = `${SERVER_URI}/p/post/${post.id}`;\n    console.log(url);\n    axios\n      .delete(url, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res.data);\n        setPostDeleted(true);\n      });\n  }\n\n  function captionEditHandler(event) {\n    setCaptionEditText(event.target.value);\n  }\n\n  function editPost() {\n    post.caption = captionEditText;\n    if (postEditMode) {\n      console.log(post.id);\n      let url = `${SERVER_URI}/p/post-edit/${post.id}`;\n      console.log(url);\n      axios\n        .post(\n          url,\n          {\n            caption: captionEditText,\n          },\n          {\n            withCredentials: true,\n          }\n        )\n        .then((res) => {\n          console.log(res.data);\n        });\n    }\n    setPostEditMode(!postEditMode);\n  }\n\n  return (\n    !postDeleted && (\n      <div\n        className=\"bg-white rounded-lg  mx-auto mb-5 shadow-lg border p-6\"\n        style={{ width: \"400px\" }}\n        key={post.id}\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            {(\n              <img\n                src={dummyPostData.imageUrl || Loading}\n                alt=\"Post\"\n                className=\"w-16 h-16 rounded-full\"\n                style={{ width: \"40px\", height: \"40px\" }}\n              />\n            ) || \"Loading...\"}\n            <div className=\"ml-4\">\n              {/* <h2 className=\"font-semibold\">{dummyPostData.posterName}</h2> */}\n              <h2 className=\"font-semibold\">{post.name}</h2>\n            </div>\n          </div>\n\n          {post.editable && (\n            <div className=\"actions flex gap-3\">\n              <FaTrashAlt\n                className=\"bg-gray-90\"\n                style={{\n                  color: \"rgb(100,50,50)\",\n                }}\n                onClick={deletePost}\n              />\n              <FaEdit\n                className=\"bg-gray-90\"\n                style={{\n                  color: \"rgb(30,30,30)\",\n                }}\n                onClick={editPost}\n              />\n            </div>\n          )}\n        </div>\n        {(\n          <img\n            src={post.imageUrl || Loading}\n            style={{ height: \"500px\", objectFit: \"cover\" }}\n            className=\"py-5\"\n            alt=\"#a\"\n          />\n        ) || \"Loading...\"}\n        {!postEditMode && (\n          <p className=\"text-md text-gray-500\">{post.caption}</p>\n        )}\n        {postEditMode && (\n          <textarea\n            name=\"\"\n            onChange={captionEditHandler}\n            value={captionEditText}\n            id=\"\"\n            cols=\"30\"\n            rows=\"2\"\n            style={{ background: \"inherit\", width: \"330px\" }}\n            className=\"focus:outline-none p-2\"\n          ></textarea>\n        )}\n        <div className=\"flex justify-between items-center mt-4\">\n          <button className=\"flex items-center text-gray-600\">\n            <GoHeart\n              className={\"text-2xl \" + (likeStatus.liked ? \"text-red-500\" : \"\")}\n              onClick={toggleLike}\n            />\n            {/* {dummyPostData.likeCount} likes */}\n            {likeStatus.likesCount} likes\n          </button>\n          <FaShare\n            onClick={() =>\n              navigator.clipboard.writeText(\n                \"http:localhost:3001/shared-post/\" + post.id\n              )\n            }\n          />\n          <button className=\"text-gray-600\" onClick={handleComments}>\n            {showComments ? \"Hide\" : \"View\"} comments\n          </button>\n        </div>\n        {showComments && (\n          <Comment\n            comments={comments}\n            fetchComments={fetchComments}\n            postId={post.id}\n            logined={logined}\n          />\n        )}\n      </div>\n    )\n  );\n}\n\nconst dummyPostData = {\n  imageUrl: \"https://source.unsplash.com/random/400x400\",\n};\n","/home/surya/ws/node/posts/client/src/components/Create.js",["96","97","98","99"],[],"import axios from \"axios\";\nimport ReactDOM from \"react-dom\";\n// let SERVER_URI = \"http://192.168.0.169:3000\";\nlet SERVER_URI = process.env.REACT_APP_SERVER_URI;\n\nexport default function Create({ handleSubmit }) {\n  return ReactDOM.createPortal(\n    <form\n      action=\"\"\n      className=\"border-2 p-4 rounded-md shadow-md mx-auto bg-gray-950\"\n      style={{\n        display: \"inline-block\",\n        position: \"absolute\",\n        left: \"50%\",\n        transform: \"translate(-50%)\",\n        position: \"fixed\",\n        left: \"50%\",\n        bottom: \"10px\",\n      }}\n      onSubmit={handleSubmit}\n    >\n      <textarea\n        className=\"border focus:outline-none p-3 bg-gray-800\"\n        style={{ width: \"400px\", height: \"100px\" }}\n        id=\"\"\n        cols=\"30\"\n        rows=\"10\"\n        name=\"caption\"\n      ></textarea>\n      <br />\n      <input type=\"file\" name=\"post\" />\n      <button className=\"py-2 px-5 text-lg text-white font-bold rounded-lg bg-blue-500\">\n        Post\n      </button>\n    </form>,\n    document.querySelector(\".overlay\")\n  );\n}\n","/home/surya/ws/node/posts/client/src/components/Post.js",["100","101","102"],[],"/home/surya/ws/node/posts/client/src/components/Comment.js",["103"],[],"import { GoHeart } from \"react-icons/go\";\nimport { FaLocationArrow } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n// let SERVER_URI = \"http://192.168.0.169:3000\";\nlet SERVER_URI = process.env.REACT_APP_SERVER_URI;\nexport default function Comment({ comments, postId, fetchComments, logined }) {\n  const [commentMessage, setCommentMessage] = useState(\"\");\n  function submitComment() {\n    let comment = document.querySelector(\".comment\");\n    axios\n      .post(\n        `${SERVER_URI}/c/comment`,\n        {\n          comment: commentMessage,\n          postId,\n        },\n        {\n          withCredentials: true,\n        }\n      )\n      .then((res) => {\n        console.log(res.data);\n        fetchComments(postId);\n        setCommentMessage(\"\");\n      });\n  }\n\n  function commentMessageHandle(event) {\n    setCommentMessage(event.target.value);\n  }\n\n  return (\n    <div className=\"mt-4\">\n      {logined && (\n        <div className=\"comment-input flex justify-between items-center\">\n          <input\n            className=\"comment p-1 height-80px border rounded border-black  bg-inherit focus:outline-none \"\n            type=\"text\"\n            style={{}}\n            name=\"comment\"\n            value={commentMessage}\n            onChange={commentMessageHandle}\n          />\n          <FaLocationArrow\n            className=\"w-80\"\n            type=\"submit\"\n            onClick={submitComment}\n          />\n        </div>\n      )}\n      {comments.map((comment) => (\n        <div key={comment.id} className=\"flex items-start mt-4\">\n          <img\n            src=\"https://source.unsplash.com/random/40x40\"\n            alt=\"Commenter\"\n            className=\"w-8 h-8 rounded-full\"\n          />\n          <div className=\"ml-4\">\n            <h3 className=\"font-semibold\">{comment.name}</h3>\n            <p className=\"text-sm text-gray-500\">{comment.comment}</p>\n            <button className=\"flex items-center text-gray-600\">\n              <GoHeart />\n              {comment.likes}\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n",{"ruleId":"104","severity":1,"message":"105","line":16,"column":10,"nodeType":"106","messageId":"107","endLine":16,"endColumn":32},{"ruleId":"104","severity":1,"message":"108","line":18,"column":7,"nodeType":"106","messageId":"107","endLine":18,"endColumn":15},{"ruleId":"104","severity":1,"message":"109","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":24,"column":6,"nodeType":"112","endLine":24,"endColumn":8,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"114","line":2,"column":43,"nodeType":"106","messageId":"107","endLine":2,"endColumn":53},{"ruleId":"104","severity":1,"message":"115","line":8,"column":10,"nodeType":"106","messageId":"107","endLine":8,"endColumn":21},{"ruleId":"104","severity":1,"message":"116","line":10,"column":8,"nodeType":"106","messageId":"107","endLine":10,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":31,"column":6,"nodeType":"112","endLine":31,"endColumn":8,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"118","line":3,"column":20,"nodeType":"106","messageId":"107","endLine":3,"endColumn":30},{"ruleId":"104","severity":1,"message":"119","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":13},{"ruleId":"104","severity":1,"message":"108","line":17,"column":7,"nodeType":"106","messageId":"107","endLine":17,"endColumn":15},{"ruleId":"104","severity":1,"message":"120","line":2,"column":22,"nodeType":"106","messageId":"107","endLine":2,"endColumn":31},{"ruleId":"104","severity":1,"message":"121","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":16,"column":3,"nodeType":"124","messageId":"125","endLine":18,"endColumn":4},{"ruleId":"110","severity":1,"message":"126","line":28,"column":6,"nodeType":"112","endLine":28,"endColumn":8,"suggestions":"127"},{"ruleId":"104","severity":1,"message":"128","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"104","severity":1,"message":"129","line":4,"column":5,"nodeType":"106","messageId":"107","endLine":4,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":16,"column":9,"nodeType":"132","messageId":"125","endLine":16,"endColumn":17},{"ruleId":"130","severity":1,"message":"133","line":17,"column":9,"nodeType":"132","messageId":"125","endLine":17,"endColumn":13},{"ruleId":"104","severity":1,"message":"118","line":1,"column":31,"nodeType":"106","messageId":"107","endLine":1,"endColumn":41},{"ruleId":"110","severity":1,"message":"134","line":33,"column":6,"nodeType":"112","endLine":33,"endColumn":8,"suggestions":"135"},{"ruleId":"110","severity":1,"message":"136","line":40,"column":6,"nodeType":"112","endLine":40,"endColumn":14,"suggestions":"137"},{"ruleId":"104","severity":1,"message":"138","line":10,"column":9,"nodeType":"106","messageId":"107","endLine":10,"endColumn":16},"no-unused-vars","'unstable_HistoryRouter' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'useContext' is defined but never used.","'useNavigate' is defined but never used.","'authContext' is defined but never used.",["140"],"'useReducer' is defined but never used.","'immer' is defined but never used.","'useEffect' is defined but never used.","'FaLocationArrow' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'fetchLikeDetails', 'fetchPost', and 'postId'. Either include them or remove the dependency array.",["141"],"'axios' is defined but never used.","'SERVER_URI' is assigned a value but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","Duplicate key 'left'.","React Hook useEffect has a missing dependency: 'fetchLikeDetails'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'updateLikesToAllUsers'. Either include it or remove the dependency array.",["143"],"'comment' is assigned a value but never used.",{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [getPosts]",{"range":"153","text":"154"},{"range":"155","text":"154"},"Update the dependencies array to be: [fetchLikeDetails, fetchPost, postId]",{"range":"156","text":"157"},"Update the dependencies array to be: [fetchLikeDetails]",{"range":"158","text":"159"},"Update the dependencies array to be: [socket, updateLikesToAllUsers]",{"range":"160","text":"161"},[740,742],"[getPosts]",[1064,1066],[856,858],"[fetchLikeDetails, fetchPost, postId]",[1240,1242],"[fetchLikeDetails]",[1402,1410],"[socket, updateLikesToAllUsers]"]