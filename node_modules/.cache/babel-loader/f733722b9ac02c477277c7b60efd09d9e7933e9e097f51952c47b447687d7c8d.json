{"ast":null,"code":"var _jsxFileName = \"/home/surya/ws/node/posts/client/src/context/authContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet authContext = /*#__PURE__*/createContext();\nlet SERVER_URI = process.env.REACT_APP_SERVER_URI;\nfunction AuthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [logined, setLogined] = useState(false);\n  useEffect(() => {\n    axios\n    // .get(`${SERVER_URI}/login-status`, {\n    .get(`${SERVER_URI}/login-status`, {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.status === \"isLogined\") setLogined(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      logined,\n      setLogined\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"MPEyfS7NDqnOBWwma9maq8MtrrU=\");\n_c = AuthProvider;\nexport default authContext;\nexport { AuthProvider };\n// let SERVER_URI = \"http://192.168.0.169:3000\";\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","authContext","SERVER_URI","process","env","REACT_APP_SERVER_URI","AuthProvider","_ref","_s","children","logined","setLogined","get","withCredentials","then","res","data","status","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/surya/ws/node/posts/client/src/context/authContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nlet authContext = createContext();\n\nlet SERVER_URI = process.env.REACT_APP_SERVER_URI;\n\nfunction AuthProvider({ children }) {\n  const [logined, setLogined] = useState(false);\n\n  useEffect(() => {\n    axios\n      // .get(`${SERVER_URI}/login-status`, {\n      .get(`${SERVER_URI}/login-status`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        if (res.data.status === \"isLogined\") setLogined(true);\n      });\n  }, []);\n\n  return (\n    <authContext.Provider value={{ logined, setLogined }}>\n      {children}\n    </authContext.Provider>\n  );\n}\n\nexport default authContext;\nexport { AuthProvider };\n// let SERVER_URI = \"http://192.168.0.169:3000\";\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,IAAIC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEjC,IAAIO,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAEjD,SAASC,YAAYA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdC;IACE;IAAA,CACCc,GAAG,CAAE,GAAEV,UAAW,eAAc,EAAE;MACjCW,eAAe,EAAE;IACnB,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,IAAI,CAACC,MAAM,KAAK,WAAW,EAAEN,UAAU,CAAC,IAAI,CAAC;IACvD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAET,OAAO;MAAEC;IAAW,CAAE;IAAAF,QAAA,EAClDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACf,EAAA,CAnBQF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAqBrB,eAAeL,WAAW;AAC1B,SAASK,YAAY;AACrB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}